import org.scalatest.{Matchers, WordSpec}

/**
 * Created by tomek on 13.01.15.
 */
class ServerCommandParserSpec extends WordSpec with Matchers {

  "Server Command Parser" should {
    "tokenize Goodbay command with one parameter" in {
      val cmd = ServerCommandParser.tokenize("Goodbay(energy=234)")
      cmd.optcode shouldBe "Goodbay"
    }
    "tokenize Welcome with multiple parameters" in {
      val cmd = ServerCommandParser.tokenize("Welcome(name=Agent,apocalypse=100,round=0,maxslaves=5)")
      cmd.optcode shouldBe "Welcome"
      cmd.params("name") shouldBe "Agent"
      cmd.params("maxslaves") shouldBe "5"
    }
    "parse Welcome command" in {
      val cmd = ServerCommandParser.parse("Welcome(name=Agent,apocalypse=100,round=0,maxslaves=5)")
      cmd shouldBe a [WelcomeCmd]
      cmd match {
        case x:WelcomeCmd =>
            x.apocalypse shouldBe 100
            x.maxSlaves shouldBe 5
            x.name shouldBe "Agent"
        case _ => fail("not a Welcome command object")
      }
    }
    "parse React command" in {
      val msg = "React(generation=0,time=68,view=______________________W_____W?_____________________________W_________________________________b____________________________________________________________________________________________?______________________________?WW____________________________?WW____________________________?WW____________________________?WW____________________________?WW____________________________?WW____________________________?WW____________________________?WW____________b_______________?WW____________Mb__pb__________?WW____________W_______________?WW___________?W?______________?WW___________?W?______________?WW__________?????_____________WWW_P________?????_____________?WW_________???????____________?WW_________???????____________?WW________?????????__p________?WW________?????????___________?WW_______???????????__________?WW_______???????????__________WWWWWWWWW?????????????_________WWWWWWWWW?????????????_________?WW????????????????????________?W?????????????????????WWW_____,energy=-1100,name=BasiUlek,status=dupa)"
      val cmd = ServerCommandParser.parse(msg)
      cmd shouldBe a [ReactCmd]
      cmd match {
        case x: ReactCmd =>
          x.generation shouldBe 0
          x.time shouldBe 68
          x.energy shouldBe -1100
          x.name shouldBe "BasiUlek"
          x.masterPosition should be (None)
          x.collision should be (None)
        case _ => fail("not a Welcome command object")
      }
    }
    "parse real input" in {
      val cmd = ServerCommandParser.parse("Welcome(name=BasiUlek,apocalypse=5000,round=14)")
      cmd shouldBe a [WelcomeCmd]
      val msg = "React(generation=0,time=2168,view=???????????WW_p___????????????????????????WW_____????????????????????????WW_____????????????????????????WW____?????????????????????????WW____?????????????????????????WW____W????????W???????????????WW____W???WWWWW????_???????????WW___PW???___W???___???????????WW____WWW__P_W??____???????????WW_____P_____W______???????????WW__________________???????????WW__________________???????????WW__________________???????????WW__________________???????????WW________P_________???????????WW__M_______________???????????WW__________________???????????WW__________________???????????WW__________________?????????????__________________????????????___________________???????????_____________p______??????????____________________W?????????_____________________W????????______________________W???????_____________WWWWWWW?__W??????______________W????????_W??????___b__________W?????????_?????_______________W??????????????________________W?????????????_________________W??????????,energy=-4700,name=BasiUlek,status=dupa)"
      ServerCommandParser.parse(msg) shouldBe a [ReactCmd]
    }
  }
}

